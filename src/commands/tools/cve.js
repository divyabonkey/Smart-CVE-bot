const { SlashCommandBuilder } = require("discord.js");
const fetch = require('node-fetch')

module.exports = {
  data: new SlashCommandBuilder()
    .setName("cve")
    .setDescription("Search for CVEs and get POC and patch links.")
    .addStringOption((option) =>
      option
        .setName("query")
        .setDescription("The CVE search query.")
        .setRequired(true)
    ),
  async execute(interaction) {
    await interaction.deferReply(); // Acknowledge the interaction

    const query = interaction.options.getString("query");
    const url = `https://services.nvd.nist.gov/rest/json/cves/1.0?keyword=${query}`;

    try {
      const response = await fetch(url);

      if (response.status !== 200) {
        throw new Error("Failed to retrieve CVE search results.");
      }

      const data = await response.json();
      const cves = data.result.CVE_Items;

      if (cves.length === 0) {
        interaction.editReply(`No results found for "${query}".`); // Edit the original message with "No results" message
        return;
      }

      let links = [];
      for (const cve of cves) {
        const id = cve.cve.CVE_data_meta.ID;
        const pocUrl = cve.cve.references.reference_data.find((ref) =>
          ref.tags.includes("Exploit","Vendor Advisory")
        )?.url;
        const patchUrl = cve.cve.references.reference_data.find((ref) =>
          ref.tags.includes("Third Party Advisory","Vendor Advisory")
        )?.url;
        if (pocUrl || patchUrl) {
          links.push({ id, pocUrl, patchUrl });
          if (links.length >= 5) break;
        }
      }

      if (links.length === 0) {
        interaction.editReply(`No accurate results found for "${query}".`); // Edit the original message with "No accurate results" message
        return;
      }

      const embed = {
        color: 0x00ff00,
        title: `Search results for "${query}"`,
        fields: links.map((link) => ({
          name: link.id,
          value: `POC: ${link.pocUrl || "N/A"}\nPatch: ${
            link.patchUrl || "N/A"
          }`,
          inline: false,
        })),
      };
      interaction.editReply({ embeds: [embed] }); // Edit the original message with the search results
    } catch (error) {
      console.error(error);
      interaction.editReply("Error: Failed to retrieve CVE search results."); // Edit the original message with the error message
    }
  },
};
